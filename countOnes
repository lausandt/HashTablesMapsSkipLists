package mapsHashSkip;

public class CountOnes {
	
	
	public static int countOnes(int[][] A) {
		int row = 0;
		int acc = 0;
		return countOnes(A,row,acc);
		
	}


	private static int countOnes(int[][] a, int row, int acc) {
		int mid = a.length/2;
		if (row == a.length) return acc;
		if (a[row][mid]==1) {
			acc = acc + mid + 1;
			for (int j = mid+1; j < a.length; j++) {
				if (a[row][j]==1)
					acc = acc +1;
				else
					break;
			}
			return countOnes(a, row+1,acc);
		}
		else {
			acc = acc + mid;
			for (int j = mid-1; j >= 0; j--) {
				if (a[row][j]==0)
					acc = acc - 1;
				else
					break;
			}
			return countOnes(a, row+1,acc);
		}

	}


	public static void main(String[] args) {
		
	 int[][] A = {{1,1,1,0,0},
				  {0,0,0,0,0},
				  {1,1,0,0,0},
				  {1,1,0,0,0},
				  {1,1,1,1,1}};

		System.out.println(countOnes(A));

	}

}
