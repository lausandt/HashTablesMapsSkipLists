/**
 * 
 */
package MapsHashSkip;

import java.util.Iterator;

import heaps_priority_queues.Entry;

/**
 * Provides shared functionality for implementations of a Map
 * @author Lau Sandt
 * https://github.com/lausandt/HashTablesMapsSkipLists
 *
 */
public abstract class AbstractMap<K, V> implements Map<K,V> {
	
	public boolean isEmpty() {return size() == 0; }
	
	//-------- nested MapEntry class --------
	@SuppressWarnings("hiding")
	protected class MapEntry<K,V> implements Entry<K,V>{
		
		// instance variables
		private K key; 
		private V value; 
		
		// constructor
		public MapEntry(K key, V value) {
			this.key   = key;
			this.value = value;
		}

		@Override
		public K getKey() { return key;}

		@Override
		public V getValue() { return value; }
		
		// utility methodes not exposed as part of the Entry interface
		
		protected void setKey(K key) { this.key = key; }
		
		// replaces the existing value with a new value returns the old value
		protected V setValue(V value) {
			V old = this.value;
			this.value = value;
			return old;
		}	
	}//-------- end nested MapEntry class -----
	
	// support for public keySet method 
	private class KeyIterator implements Iterator<K> {
		
		private Iterator<Entry<K,V>> entries = entrySet().iterator();
		public boolean hasNext() { return entries.hasNext(); }
		public K next() { return entries.next().getKey(); }
		public void remove() { throw new UnsupportedOperationException(); } 	
	}
	
	private class KeyIterable implements Iterable<K>{
		public Iterator<K> iterator() { return new KeyIterator(); }
	}
	
	/**  Returns an iterable collection containing all keys stored in M */
	public Iterable<K> keySet() { return new KeyIterable(); }
	
	// support for public values method
	
	private class ValueIterator implements Iterator<V> {
		private Iterator<Entry<K,V>> entries = entrySet().iterator();
		public boolean hasNext() { return entries.hasNext(); }
		public V next() { return entries.next().getValue(); }
		public void remove() { throw new UnsupportedOperationException(); }
	}
	
	private class ValueIterable implements Iterable<V> {
		public Iterator<V> iterator() { return new ValueIterator(); }
	}
	
	public Iterable<V> values() { return new ValueIterable(); }

}
